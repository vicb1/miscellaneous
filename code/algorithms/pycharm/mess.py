import copy
def isValidSudoku(board):
    for row in board:
        row_periods_removed = [x for x in row if x != '.']
        # print(row_periods_removed)
        if sorted(list(set(row_periods_removed))) != sorted(row_periods_removed):
            return False

    board2 = copy.deepcopy(board)
    for row in range(len(board)):
        for col in range(len(board[0])):
            val = str(board[col][row])
            board2[row][col] = val
    print(board2)

    for row in board2:
        row_periods_removed = [x for x in row if x != '.']
        # print(row_periods_removed)

        if sorted(list(set(row_periods_removed))) != sorted(row_periods_removed):
            return False

    return True
# print(isValidSudoku([["8","3",".",".","7",".",".",".","."],
#                      ["6",".",".","1","9","5",".",".","."],
#                      [".","9","8",".",".",".",".","6","."],
#                      ["8",".",".",".","6",".",".",".","3"],
#                      ["4",".",".","8",".","3",".",".","1"],
#                      ["7",".",".",".","2",".",".",".","6"],
#                      [".","6",".",".",".",".","2","8","."],
#                      [".",".",".","4","1","9",".",".","5"],
#                      [".",".",".",".","8",".",".","7","9"]]))

# print(isValidSudoku([["5","3",".",".","7",".",".",".","."],
#                      ["6",".",".","1","9","5",".",".","."],
#                      [".","9","8",".",".",".",".","6","."],
#                      ["8",".",".",".","6",".",".",".","3"],
#                      ["4",".",".","8",".","3",".",".","1"],
#                      ["7",".",".",".","2",".",".",".","6"],
#                      [".","6",".",".",".",".","2","8","."],
#                      [".",".",".","4","1","9",".",".","5"],
#                      [".",".",".",".","8",".",".","7","9"]]))

print(isValidSudoku([[".",".",".",".","5",".",".","1","."],
                     [".","4",".","3",".",".",".",".","."],
                     [".",".",".",".",".","3",".",".","1"],
                     ["8",".",".",".",".",".",".","2","."],
                     [".",".","2",".","7",".",".",".","."],
                     [".","1","5",".",".",".",".",".","."],
                     [".",".",".",".",".","2",".",".","."],
                     [".","2",".","9",".",".",".",".","."],
                     [".",".","4",".",".",".",".",".","."]]))